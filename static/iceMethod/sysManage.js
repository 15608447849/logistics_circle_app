// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `sysManage.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var cstruct = require("static/iceMethod/cstruct").cstruct;
    var Slice = Ice.Slice;

    var sysmanage = __M.module("sysmanage");

    /**
     * shanben-CN 2018-4-3 用户登录时返回的用户全局相关信息
     **/
    sysmanage.UserGlobalInfo = Slice.defineStruct(
        function(compid, compname, orgid, orgname, areac, worgid, worgname, wareac, roleid, rolename, userid, username, realname)
        {
            this.compid = compid !== undefined ? compid : 0;
            this.compname = compname !== undefined ? compname : "";
            this.orgid = orgid !== undefined ? orgid : 0;
            this.orgname = orgname !== undefined ? orgname : "";
            this.areac = areac !== undefined ? areac : 0;
            this.worgid = worgid !== undefined ? worgid : 0;
            this.worgname = worgname !== undefined ? worgname : "";
            this.wareac = wareac !== undefined ? wareac : 0;
            this.roleid = roleid !== undefined ? roleid : 0;
            this.rolename = rolename !== undefined ? rolename : "";
            this.userid = userid !== undefined ? userid : 0;
            this.username = username !== undefined ? username : "";
            this.realname = realname !== undefined ? realname : "";
        },
        true,
        function(__os)
        {
            __os.writeInt(this.compid);
            __os.writeString(this.compname);
            __os.writeLong(this.orgid);
            __os.writeString(this.orgname);
            __os.writeInt(this.areac);
            __os.writeLong(this.worgid);
            __os.writeString(this.worgname);
            __os.writeInt(this.wareac);
            __os.writeLong(this.roleid);
            __os.writeString(this.rolename);
            __os.writeInt(this.userid);
            __os.writeString(this.username);
            __os.writeString(this.realname);
        },
        function(__is)
        {
            this.compid = __is.readInt();
            this.compname = __is.readString();
            this.orgid = __is.readLong();
            this.orgname = __is.readString();
            this.areac = __is.readInt();
            this.worgid = __is.readLong();
            this.worgname = __is.readString();
            this.wareac = __is.readInt();
            this.roleid = __is.readLong();
            this.rolename = __is.readString();
            this.userid = __is.readInt();
            this.username = __is.readString();
            this.realname = __is.readString();
        },
        46,
        false);

    /**
     * 用户基本信息数据模型
     **/
    sysmanage.User = Slice.defineStruct(
        function(oid, compid, compname, orgid, orgname, temporgid, userid, username, realname, roleid, rolename, userpw, cphone, email, wchatid, lockdate, locktime, adddate, addtime, usertype, cstatus)
        {
            this.oid = oid !== undefined ? oid : 0;
            this.compid = compid !== undefined ? compid : 0;
            this.compname = compname !== undefined ? compname : "";
            this.orgid = orgid !== undefined ? orgid : 0;
            this.orgname = orgname !== undefined ? orgname : "";
            this.temporgid = temporgid !== undefined ? temporgid : 0;
            this.userid = userid !== undefined ? userid : 0;
            this.username = username !== undefined ? username : "";
            this.realname = realname !== undefined ? realname : "";
            this.roleid = roleid !== undefined ? roleid : 0;
            this.rolename = rolename !== undefined ? rolename : "";
            this.userpw = userpw !== undefined ? userpw : "";
            this.cphone = cphone !== undefined ? cphone : 0;
            this.email = email !== undefined ? email : "";
            this.wchatid = wchatid !== undefined ? wchatid : "";
            this.lockdate = lockdate !== undefined ? lockdate : "";
            this.locktime = locktime !== undefined ? locktime : "";
            this.adddate = adddate !== undefined ? adddate : "";
            this.addtime = addtime !== undefined ? addtime : "";
            this.usertype = usertype !== undefined ? usertype : 0;
            this.cstatus = cstatus !== undefined ? cstatus : 0;
        },
        true,
        function(__os)
        {
            __os.writeInt(this.oid);
            __os.writeInt(this.compid);
            __os.writeString(this.compname);
            __os.writeLong(this.orgid);
            __os.writeString(this.orgname);
            __os.writeLong(this.temporgid);
            __os.writeInt(this.userid);
            __os.writeString(this.username);
            __os.writeString(this.realname);
            __os.writeLong(this.roleid);
            __os.writeString(this.rolename);
            __os.writeString(this.userpw);
            __os.writeLong(this.cphone);
            __os.writeString(this.email);
            __os.writeString(this.wchatid);
            __os.writeString(this.lockdate);
            __os.writeString(this.locktime);
            __os.writeString(this.adddate);
            __os.writeString(this.addtime);
            __os.writeInt(this.usertype);
            __os.writeInt(this.cstatus);
        },
        function(__is)
        {
            this.oid = __is.readInt();
            this.compid = __is.readInt();
            this.compname = __is.readString();
            this.orgid = __is.readLong();
            this.orgname = __is.readString();
            this.temporgid = __is.readLong();
            this.userid = __is.readInt();
            this.username = __is.readString();
            this.realname = __is.readString();
            this.roleid = __is.readLong();
            this.rolename = __is.readString();
            this.userpw = __is.readString();
            this.cphone = __is.readLong();
            this.email = __is.readString();
            this.wchatid = __is.readString();
            this.lockdate = __is.readString();
            this.locktime = __is.readString();
            this.adddate = __is.readString();
            this.addtime = __is.readString();
            this.usertype = __is.readInt();
            this.cstatus = __is.readInt();
        },
        64,
        false);
    Slice.defineSequence(sysmanage, "UserSeqHelper", "sysmanage.User", false);

    /**
     * 资源码数据模型 shanben-CN 引用了此原来定义的数据模型。用于全局资源与角色对应关系。
     **/
    sysmanage.ResCode = Slice.defineStruct(
        function(resid, resname, roleid, cstatus)
        {
            this.resid = resid !== undefined ? resid : 0;
            this.resname = resname !== undefined ? resname : "";
            this.roleid = roleid !== undefined ? roleid : 0;
            this.cstatus = cstatus !== undefined ? cstatus : 0;
        },
        true,
        function(__os)
        {
            __os.writeInt(this.resid);
            __os.writeString(this.resname);
            __os.writeLong(this.roleid);
            __os.writeInt(this.cstatus);
        },
        function(__is)
        {
            this.resid = __is.readInt();
            this.resname = __is.readString();
            this.roleid = __is.readLong();
            this.cstatus = __is.readInt();
        },
        17,
        false);
    Slice.defineSequence(sysmanage, "ResSeqHelper", "sysmanage.ResCode", false);

    /**
     * 角色数据模型
     **/
    sysmanage.Role = Slice.defineStruct(
        function(roleid, rolename, cstatus)
        {
            this.roleid = roleid !== undefined ? roleid : 0;
            this.rolename = rolename !== undefined ? rolename : "";
            this.cstatus = cstatus !== undefined ? cstatus : 0;
        },
        true,
        function(__os)
        {
            __os.writeLong(this.roleid);
            __os.writeString(this.rolename);
            __os.writeInt(this.cstatus);
        },
        function(__is)
        {
            this.roleid = __is.readLong();
            this.rolename = __is.readString();
            this.cstatus = __is.readInt();
        },
        13,
        false);
    Slice.defineSequence(sysmanage, "RoleSeqHelper", "sysmanage.Role", false);

    /**
     * 角色-资源数据模型
     **/
    sysmanage.RoleRes = Slice.defineStruct(
        function(role, resList)
        {
            this.role = role !== undefined ? role : new sysmanage.Role();
            this.resList = resList !== undefined ? resList : null;
        },
        true,
        function(__os)
        {
            sysmanage.Role.write(__os, this.role);
            sysmanage.ResSeqHelper.write(__os, this.resList);
        },
        function(__is)
        {
            this.role = sysmanage.Role.read(__is, this.role);
            this.resList = sysmanage.ResSeqHelper.read(__is);
        },
        14,
        false);
    Slice.defineSequence(sysmanage, "RoleResSeqHelper", "sysmanage.RoleRes", false);

    /**
     * 用户登录返回信息模型
     **/
    sysmanage.UserInfo = Slice.defineStruct(
        function(user, result)
        {
            this.user = user !== undefined ? user : new sysmanage.User();
            this.result = result !== undefined ? result : new cstruct.BoolMessage();
        },
        true,
        function(__os)
        {
            sysmanage.User.write(__os, this.user);
            cstruct.BoolMessage.write(__os, this.result);
        },
        function(__is)
        {
            this.user = sysmanage.User.read(__is, this.user);
            this.result = cstruct.BoolMessage.read(__is, this.result);
        },
        67,
        false);

    /**
     * 操作日志数据模型
     **/
    sysmanage.OprationLog = Slice.defineStruct(
        function(oid, company, orgid, orgname, oprationBy, project, projectno, oprationdesc, oprationdate, oprationtime, logoutdate, logouttime, predata, busType, cstatus, realname, username, timelength)
        {
            this.oid = oid !== undefined ? oid : 0;
            this.company = company !== undefined ? company : "";
            this.orgid = orgid !== undefined ? orgid : 0;
            this.orgname = orgname !== undefined ? orgname : "";
            this.oprationBy = oprationBy !== undefined ? oprationBy : 0;
            this.project = project !== undefined ? project : "";
            this.projectno = projectno !== undefined ? projectno : 0;
            this.oprationdesc = oprationdesc !== undefined ? oprationdesc : "";
            this.oprationdate = oprationdate !== undefined ? oprationdate : "";
            this.oprationtime = oprationtime !== undefined ? oprationtime : "";
            this.logoutdate = logoutdate !== undefined ? logoutdate : "";
            this.logouttime = logouttime !== undefined ? logouttime : "";
            this.predata = predata !== undefined ? predata : "";
            this.busType = busType !== undefined ? busType : "";
            this.cstatus = cstatus !== undefined ? cstatus : 0;
            this.realname = realname !== undefined ? realname : "";
            this.username = username !== undefined ? username : "";
            this.timelength = timelength !== undefined ? timelength : 0;
        },
        true,
        function(__os)
        {
            __os.writeLong(this.oid);
            __os.writeString(this.company);
            __os.writeLong(this.orgid);
            __os.writeString(this.orgname);
            __os.writeLong(this.oprationBy);
            __os.writeString(this.project);
            __os.writeLong(this.projectno);
            __os.writeString(this.oprationdesc);
            __os.writeString(this.oprationdate);
            __os.writeString(this.oprationtime);
            __os.writeString(this.logoutdate);
            __os.writeString(this.logouttime);
            __os.writeString(this.predata);
            __os.writeString(this.busType);
            __os.writeInt(this.cstatus);
            __os.writeString(this.realname);
            __os.writeString(this.username);
            __os.writeLong(this.timelength);
        },
        function(__is)
        {
            this.oid = __is.readLong();
            this.company = __is.readString();
            this.orgid = __is.readLong();
            this.orgname = __is.readString();
            this.oprationBy = __is.readLong();
            this.project = __is.readString();
            this.projectno = __is.readLong();
            this.oprationdesc = __is.readString();
            this.oprationdate = __is.readString();
            this.oprationtime = __is.readString();
            this.logoutdate = __is.readString();
            this.logouttime = __is.readString();
            this.predata = __is.readString();
            this.busType = __is.readString();
            this.cstatus = __is.readInt();
            this.realname = __is.readString();
            this.username = __is.readString();
            this.timelength = __is.readLong();
        },
        56,
        false);
    Slice.defineSequence(sysmanage, "OprationLogSeqHelper", "sysmanage.OprationLog", false);

    /**
     * 操作日志数据查询模型
     **/
    sysmanage.OprationLogQC = Slice.defineStruct(
        function(oid, startdate, enddate, busType, cstatus, realname, username)
        {
            this.oid = oid !== undefined ? oid : 0;
            this.startdate = startdate !== undefined ? startdate : "";
            this.enddate = enddate !== undefined ? enddate : "";
            this.busType = busType !== undefined ? busType : "";
            this.cstatus = cstatus !== undefined ? cstatus : 0;
            this.realname = realname !== undefined ? realname : "";
            this.username = username !== undefined ? username : "";
        },
        true,
        function(__os)
        {
            __os.writeLong(this.oid);
            __os.writeString(this.startdate);
            __os.writeString(this.enddate);
            __os.writeString(this.busType);
            __os.writeInt(this.cstatus);
            __os.writeString(this.realname);
            __os.writeString(this.username);
        },
        function(__is)
        {
            this.oid = __is.readLong();
            this.startdate = __is.readString();
            this.enddate = __is.readString();
            this.busType = __is.readString();
            this.cstatus = __is.readInt();
            this.realname = __is.readString();
            this.username = __is.readString();
        },
        17,
        false);

    /**
     * 公司信息模型
     **/
    sysmanage.Comp = Slice.defineStruct(
        function(compid, compname, cstatus)
        {
            this.compid = compid !== undefined ? compid : 0;
            this.compname = compname !== undefined ? compname : "";
            this.cstatus = cstatus !== undefined ? cstatus : 0;
        },
        true,
        function(__os)
        {
            __os.writeInt(this.compid);
            __os.writeString(this.compname);
            __os.writeInt(this.cstatus);
        },
        function(__is)
        {
            this.compid = __is.readInt();
            this.compname = __is.readString();
            this.cstatus = __is.readInt();
        },
        9,
        false);
    Slice.defineSequence(sysmanage, "CompSeqHelper", "sysmanage.Comp", false);

    /**
     * 组织机构信息模型
     **/
    sysmanage.Org = Slice.defineStruct(
        function(compid, compname, orgid, orgname, areac, arean, orgtype, orgtypename, cstatus)
        {
            this.compid = compid !== undefined ? compid : 0;
            this.compname = compname !== undefined ? compname : "";
            this.orgid = orgid !== undefined ? orgid : 0;
            this.orgname = orgname !== undefined ? orgname : "";
            this.areac = areac !== undefined ? areac : 0;
            this.arean = arean !== undefined ? arean : "";
            this.orgtype = orgtype !== undefined ? orgtype : 0;
            this.orgtypename = orgtypename !== undefined ? orgtypename : "";
            this.cstatus = cstatus !== undefined ? cstatus : 0;
        },
        true,
        function(__os)
        {
            __os.writeInt(this.compid);
            __os.writeString(this.compname);
            __os.writeLong(this.orgid);
            __os.writeString(this.orgname);
            __os.writeInt(this.areac);
            __os.writeString(this.arean);
            __os.writeInt(this.orgtype);
            __os.writeString(this.orgtypename);
            __os.writeInt(this.cstatus);
        },
        function(__is)
        {
            this.compid = __is.readInt();
            this.compname = __is.readString();
            this.orgid = __is.readLong();
            this.orgname = __is.readString();
            this.areac = __is.readInt();
            this.arean = __is.readString();
            this.orgtype = __is.readInt();
            this.orgtypename = __is.readString();
            this.cstatus = __is.readInt();
        },
        28,
        false);
    Slice.defineSequence(sysmanage, "OrgSeqHelper", "sysmanage.Org", false);

    /**
     * 用户管理服务接口
     **/
    sysmanage.VersionInfo = Slice.defineStruct(
        function(filePath, md5)
        {
            this.filePath = filePath !== undefined ? filePath : "";
            this.md5 = md5 !== undefined ? md5 : "";
        },
        true,
        function(__os)
        {
            __os.writeString(this.filePath);
            __os.writeString(this.md5);
        },
        function(__is)
        {
            this.filePath = __is.readString();
            this.md5 = __is.readString();
        },
        2,
        false);
    Slice.defineSequence(sysmanage, "UpdateListSqeHelper", "sysmanage.VersionInfo", false);

    sysmanage.UpdateResponsePackage = Slice.defineStruct(
        function(filePath, size, index, total, packageInfo, status, msg, md5Check, md5)
        {
            this.filePath = filePath !== undefined ? filePath : "";
            this.size = size !== undefined ? size : 0;
            this.index = index !== undefined ? index : 0;
            this.total = total !== undefined ? total : 0;
            this.packageInfo = packageInfo !== undefined ? packageInfo : null;
            this.status = status !== undefined ? status : 0;
            this.msg = msg !== undefined ? msg : "";
            this.md5Check = md5Check !== undefined ? md5Check : false;
            this.md5 = md5 !== undefined ? md5 : "";
        },
        true,
        function(__os)
        {
            __os.writeString(this.filePath);
            __os.writeInt(this.size);
            __os.writeInt(this.index);
            __os.writeInt(this.total);
            cstruct.byteSeqHelper.write(__os, this.packageInfo);
            __os.writeInt(this.status);
            __os.writeString(this.msg);
            __os.writeBool(this.md5Check);
            __os.writeString(this.md5);
        },
        function(__is)
        {
            this.filePath = __is.readString();
            this.size = __is.readInt();
            this.index = __is.readInt();
            this.total = __is.readInt();
            this.packageInfo = cstruct.byteSeqHelper.read(__is);
            this.status = __is.readInt();
            this.msg = __is.readString();
            this.md5Check = __is.readBool();
            this.md5 = __is.readString();
        },
        21,
        false);

    sysmanage.UpdateRequestPackage = Slice.defineStruct(
        function(filePath, size, index, OS)
        {
            this.filePath = filePath !== undefined ? filePath : "";
            this.size = size !== undefined ? size : 0;
            this.index = index !== undefined ? index : 0;
            this.OS = OS !== undefined ? OS : 0;
        },
        true,
        function(__os)
        {
            __os.writeString(this.filePath);
            __os.writeInt(this.size);
            __os.writeInt(this.index);
            __os.writeInt(this.OS);
        },
        function(__is)
        {
            this.filePath = __is.readString();
            this.size = __is.readInt();
            this.index = __is.readInt();
            this.OS = __is.readInt();
        },
        13,
        false);

    sysmanage.SysManageService = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::sysmanage::SysManageService"
        ],
        -1, undefined, undefined, false);

    sysmanage.SysManageServicePrx = Slice.defineProxy(Ice.ObjectPrx, sysmanage.SysManageService.ice_staticId, undefined);

    Slice.defineOperations(sysmanage.SysManageService, sysmanage.SysManageServicePrx,
    {
        "saveUser": [, , , , , [cstruct.BoolMessage], [[sysmanage.User]], , , , ],
        "updateUser": [, , , , , [cstruct.BoolMessage], [[sysmanage.User]], , , , ],
        "queryUsers": [, , , , , ["sysmanage.UserSeqHelper"], [[cstruct.Page], [7], [sysmanage.User]], [[cstruct.Page]], , , ],
        "queryUserM": [, , , , , ["sysmanage.UserSeqHelper"], [["cstruct.stringSeqHelper"]], , , , ],
        "queryUserByUserid": [, , , , , [sysmanage.User], [[3]], , , , ],
        "delUser": [, , , , , [cstruct.BoolMessage], [[4]], , , , ],
        "unlockUser": [, , , , , [cstruct.BoolMessage], [[4]], , , , ],
        "isNotExistUserName": [, , , , , [cstruct.BoolMessage], [[7]], , , , ],
        "isNotBindPhone": [, , , , , [cstruct.BoolMessage], [[4]], , , , ],
        "login": [, , , , , [sysmanage.UserInfo], [[7], [7], [3], [3], [3]], , , , ],
        "loginCS": [, , , , , [sysmanage.UserGlobalInfo], [[7], [7]], , , , ],
        "loginH5": [, , , , , [sysmanage.UserGlobalInfo], [[7]], , , , ],
        "changePasswd": [, , , , , [cstruct.BoolMessage], [[4], [7], [7]], , , , ],
        "resetPasswd": [, , , , , [cstruct.BoolMessage], [[4], [7]], , , , ],
        "getRoles": [, , , , , [4], [[4]], , , , ],
        "addRole": [, , , , , [cstruct.BoolMessage], [[sysmanage.RoleRes]], , , , ],
        "updateRole": [, , , , , [cstruct.BoolMessage], [[sysmanage.Role]], , , , ],
        "delRole": [, , , , , [cstruct.BoolMessage], [[4]], , , , ],
        "queryRolesAndRes": [, , , , , ["sysmanage.RoleResSeqHelper"], [[cstruct.Page], [7], [sysmanage.Role]], [[cstruct.Page]], , , ],
        "queryRoles": [, , , , , ["sysmanage.RoleSeqHelper"], [[cstruct.Page], [7], [sysmanage.Role]], [[cstruct.Page]], , , ],
        "queryResByRole": [, , , , , ["sysmanage.ResSeqHelper"], [[4]], , , , ],
        "addRes": [, , , , , [cstruct.BoolMessage], [[sysmanage.ResCode]], , , , ],
        "delRes": [, , , , , [cstruct.BoolMessage], [[4]], , , , ],
        "updateRes": [, , , , , [cstruct.BoolMessage], [[sysmanage.ResCode]], , , , ],
        "queryRes": [, , , , , ["sysmanage.ResSeqHelper"], [[cstruct.Page], [7], [sysmanage.ResCode]], [[cstruct.Page]], , , ],
        "queryResForTree": [, , , , , [7], [[sysmanage.ResCode]], , , , ],
        "delUsers": [, , , , , [3], [["cstruct.intSeqHelper"]], , , , ],
        "delRoles": [, , , , , [cstruct.BoolMessage], [["cstruct.longSeqHelper"]], , , , ],
        "addOprationLog": [, , , , , [cstruct.BoolMessage], [[sysmanage.OprationLog]], , , , ],
        "queryOprationLog": [, , , , , ["sysmanage.OprationLogSeqHelper"], [[cstruct.Page], [7], [sysmanage.OprationLogQC]], [[cstruct.Page]], , , ],
        "addLoginLog": [, , , , , [cstruct.BoolMessage], [[sysmanage.OprationLog]], , , , ],
        "authorizeRole": [, , , , , [cstruct.BoolMessage], [[sysmanage.RoleRes]], , , , ],
        "delOprationLog": [, , , , , [cstruct.BoolMessage], [[4]], , , , ],
        "delOprationLogs": [, , , , , [cstruct.BoolMessage], [["cstruct.longSeqHelper"]], , , , ],
        "queryResByUser": [, , , , , ["sysmanage.ResSeqHelper"], [[4], [3]], , , , ],
        "queryResRoles": [, , , , , ["sysmanage.ResSeqHelper"], , , , , ],
        "addOrg": [, , , , , [cstruct.BoolMessage], [[sysmanage.Org]], , , , ],
        "updateOrg": [, , , , , [cstruct.BoolMessage], [[sysmanage.Org], [4]], , , , ],
        "delOrgs": [, , , , , [3], [["cstruct.longSeqHelper"]], , , , ],
        "delResCodes": [, , , , , [3], [["cstruct.intSeqHelper"]], , , , ],
        "queryOrgs": [, , , , , ["sysmanage.OrgSeqHelper"], [[cstruct.Page], [7], [3]], [[cstruct.Page]], , , ],
        "queryOrgsByOrgid": [, , , , , ["sysmanage.OrgSeqHelper"], [[4]], , , , ],
        "queryParentByOrgid": [, , , , , [sysmanage.Org], [[4]], , , , ],
        "queryOrgsByM": [, , , , , ["sysmanage.OrgSeqHelper"], [["cstruct.stringSeqHelper"]], , , , ],
        "queryScheOrgByUser": [, , , , , [sysmanage.Org], [[3]], , , , ],
        "queryOrgForTree": [, , , , , [7], [[4]], , , , ],
        "updateComp": [, , , , , [cstruct.BoolMessage], [[sysmanage.Comp]], , , , ],
        "queryCompByUser": [, , , , , [sysmanage.Comp], [[3]], , , , ],
        "queryCompById": [, , , , , [sysmanage.Comp], [[3]], , , , ],
        "userOrgidCount": [, , , , , [3], [[4]], , , , ],
        "queryOrgByOrgid": [, , , , , [sysmanage.Org], [[4]], , , , ],
        "queryRolesM": [, , , , , ["sysmanage.RoleSeqHelper"], [["cstruct.stringSeqHelper"]], , , , ],
        "queryResourcesM": [, , , , , ["sysmanage.ResSeqHelper"], [["cstruct.stringSeqHelper"]], , , , ],
        "authorizeRoleM": [, , , , , [cstruct.BoolMessage], [[sysmanage.RoleRes]], , , , ],
        "authorizeRoleInResM": [, , , , , [cstruct.BoolMessage], [[sysmanage.ResCode]], , , , ],
        "getDriver": [, , , , , ["cstruct.stringSeqHelper"], , , , , ],
        "getDispatcherOrg": [, , , , , ["cstruct.stringSeqHelper"], , , , , ],
        "checkUpdateList": [, , , , , ["sysmanage.UpdateListSqeHelper"], [[7]], , , , ],
        "getVersionPackage": [, , , , , [sysmanage.UpdateResponsePackage], [[sysmanage.UpdateRequestPackage]], , , , ]
    });
    exports.sysmanage = sysmanage;
}(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : this.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : this));
