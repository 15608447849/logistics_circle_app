// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `message.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var cstruct = require("cstruct").cstruct;
    var Slice = Ice.Slice;

    var message = __M.module("message");

    /**
     * 消息内容
     **/
    message.Msg = Slice.defineStruct(
        function(sender, receiver, sendName, msgtype, isread, msgtext, sendDate, sendTime, msgid, opstatus)
        {
            this.sender = sender !== undefined ? sender : 0;
            this.receiver = receiver !== undefined ? receiver : 0;
            this.sendName = sendName !== undefined ? sendName : "";
            this.msgtype = msgtype !== undefined ? msgtype : 0;
            this.isread = isread !== undefined ? isread : 0;
            this.msgtext = msgtext !== undefined ? msgtext : "";
            this.sendDate = sendDate !== undefined ? sendDate : "";
            this.sendTime = sendTime !== undefined ? sendTime : "";
            this.msgid = msgid !== undefined ? msgid : 0;
            this.opstatus = opstatus !== undefined ? opstatus : 0;
        },
        true,
        function(__os)
        {
            __os.writeInt(this.sender);
            __os.writeInt(this.receiver);
            __os.writeString(this.sendName);
            __os.writeInt(this.msgtype);
            __os.writeInt(this.isread);
            __os.writeString(this.msgtext);
            __os.writeString(this.sendDate);
            __os.writeString(this.sendTime);
            __os.writeLong(this.msgid);
            __os.writeInt(this.opstatus);
        },
        function(__is)
        {
            this.sender = __is.readInt();
            this.receiver = __is.readInt();
            this.sendName = __is.readString();
            this.msgtype = __is.readInt();
            this.isread = __is.readInt();
            this.msgtext = __is.readString();
            this.sendDate = __is.readString();
            this.sendTime = __is.readString();
            this.msgid = __is.readLong();
            this.opstatus = __is.readInt();
        },
        32, 
        false);
    Slice.defineSequence(message, "MsgSeqHelper", "message.Msg", false);

    /**
     * 消息接口
     **/
    message.MessageService = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::message::MessageService"
        ],
        -1, undefined, undefined, false);

    message.MessageServicePrx = Slice.defineProxy(Ice.ObjectPrx, message.MessageService.ice_staticId, undefined);

    Slice.defineOperations(message.MessageService, message.MessageServicePrx,
    {
        "queryMsgListByUno": [, , , , , [7], [[cstruct.UserParam]], , , , ],
        "queryMsgListByUid": [, , , , , [7], [[cstruct.UserParam], [3]], , , , ],
        "sendMsg": [, , , , , [7], [[3], [7], [3], [3], [7]], , , , ],
        "addMessage": [, , , , , [7], [[message.Msg]], , , , ],
        "updateMessage": [, , , , , [3], [[message.Msg]], , , , ],
        "isUnreadMsg": [, , , , , [3], [[cstruct.UserParam]], , , , ],
        "delOldMsg": [, , , , , , , , , , ],
        "updateReadStatus": [, , , , , [7], [[4]], , , , ]
    });
    exports.message = message;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : this.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : this));
