// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `user.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var Slice = Ice.Slice;

    var user = __M.module("user");

    /**
     * 用户基本信息数据模型
     **/
    user.UserICE = Slice.defineStruct(
        function(uno, rno, uname, uphone, upw, upwstatus, uinvite, adddate, addtime, updatedate, updatetime, cstatus, msg)
        {
            this.uno = uno !== undefined ? uno : 0;
            this.rno = rno !== undefined ? rno : 0;
            this.uname = uname !== undefined ? uname : "";
            this.uphone = uphone !== undefined ? uphone : 0;
            this.upw = upw !== undefined ? upw : "";
            this.upwstatus = upwstatus !== undefined ? upwstatus : 0;
            this.uinvite = uinvite !== undefined ? uinvite : "";
            this.adddate = adddate !== undefined ? adddate : "";
            this.addtime = addtime !== undefined ? addtime : "";
            this.updatedate = updatedate !== undefined ? updatedate : "";
            this.updatetime = updatetime !== undefined ? updatetime : "";
            this.cstatus = cstatus !== undefined ? cstatus : 0;
            this.msg = msg !== undefined ? msg : "";
        },
        true,
        function(__os)
        {
            __os.writeLong(this.uno);
            __os.writeShort(this.rno);
            __os.writeString(this.uname);
            __os.writeLong(this.uphone);
            __os.writeString(this.upw);
            __os.writeShort(this.upwstatus);
            __os.writeString(this.uinvite);
            __os.writeString(this.adddate);
            __os.writeString(this.addtime);
            __os.writeString(this.updatedate);
            __os.writeString(this.updatetime);
            __os.writeShort(this.cstatus);
            __os.writeString(this.msg);
        },
        function(__is)
        {
            this.uno = __is.readLong();
            this.rno = __is.readShort();
            this.uname = __is.readString();
            this.uphone = __is.readLong();
            this.upw = __is.readString();
            this.upwstatus = __is.readShort();
            this.uinvite = __is.readString();
            this.adddate = __is.readString();
            this.addtime = __is.readString();
            this.updatedate = __is.readString();
            this.updatetime = __is.readString();
            this.cstatus = __is.readShort();
            this.msg = __is.readString();
        },
        30, 
        false);

    /**
     * 角色基本信息数据模型
     **/
    user.SMSICE = Slice.defineStruct(
        function(sno, uno, sphone, sms, adddate, addtime, cstatus, msg)
        {
            this.sno = sno !== undefined ? sno : 0;
            this.uno = uno !== undefined ? uno : 0;
            this.sphone = sphone !== undefined ? sphone : 0;
            this.sms = sms !== undefined ? sms : "";
            this.adddate = adddate !== undefined ? adddate : "";
            this.addtime = addtime !== undefined ? addtime : "";
            this.cstatus = cstatus !== undefined ? cstatus : 0;
            this.msg = msg !== undefined ? msg : "";
        },
        true,
        function(__os)
        {
            __os.writeLong(this.sno);
            __os.writeLong(this.uno);
            __os.writeLong(this.sphone);
            __os.writeString(this.sms);
            __os.writeString(this.adddate);
            __os.writeString(this.addtime);
            __os.writeShort(this.cstatus);
            __os.writeString(this.msg);
        },
        function(__is)
        {
            this.sno = __is.readLong();
            this.uno = __is.readLong();
            this.sphone = __is.readLong();
            this.sms = __is.readString();
            this.adddate = __is.readString();
            this.addtime = __is.readString();
            this.cstatus = __is.readShort();
            this.msg = __is.readString();
        },
        30, 
        false);
    Slice.defineSequence(user, "stringListHelper", "Ice.StringHelper", false);
    Slice.defineSequence(user, "userListHelper", "user.UserICE", false);

    user.UserService = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::user::UserService"
        ],
        -1, undefined, undefined, false);

    user.UserServicePrx = Slice.defineProxy(Ice.ObjectPrx, user.UserService.ice_staticId, undefined);

    Slice.defineOperations(user.UserService, user.UserServicePrx,
    {
        "login": [, , , , , [user.UserICE], [[7], [7], [3]], , , , ],
        "loginBySms": [, , , , , [user.UserICE], [[7], [7]], , , , ],
        "loginByToken": [, , , , , [user.UserICE], [[7]], , , , ],
        "getUserInfo": [, , , , , ["user.userListHelper"], [[7], ["user.stringListHelper"], [3]], , , , ],
        "resetDriverPassword": [, , , , , [7], [[7], [4]], , , , ],
        "addDriver": [, , , , , [user.UserICE], [[7], [4]], , , , ],
        "verifyUserName": [, , , , , [7], [[7]], , , , ],
        "verifyPhone": [, , , , , [7], [[4]], , , , ],
        "sendSms": [, , , , , [7], [[4], [7]], , , , ],
        "verifySms": [, , , , , [7], [[4], [7]], , , , ],
        "custRegister": [, , , , , [user.UserICE], [[7], [4], [7], [7], [7]], , , , ],
        "forgetUserPassword": [, , , , , [7], [[4], [7], [7]], , , , ],
        "updateUserPassword": [, , , , , [7], [[7], [7], [7]], , , , ],
        "updateUserPhone": [, , , , , [7], [[7], [4], [7]], , , , ],
        "getUserInfoByToken": [, , , , , [user.UserICE], [[7]], , , , ],
        "getPermissionByToken": [, , , , , [7], [[7]], , , , ],
        "getRoleNameByToken": [, , , , , [7], [[7]], , , , ],
        "smsTest": [, , , , , [7], [[7], [7]], , , , ],
        "driverLogin": [, , , , , [7], [[4], [7]], , , , ],
        "updateDriverPassword": [, , , , , [7], [[4], [7], [7]], , , , ]
    });
    exports.user = user;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : this.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : this));
