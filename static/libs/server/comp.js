// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `comp.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var cstruct = require("cstruct").cstruct;
    var Slice = Ice.Slice;

    var comp = __M.module("comp");

    /**
     * 路线模型
     **/
    comp.Route = Slice.defineStruct(
        function(startpn, endpn, channel, transfer)
        {
            this.startpn = startpn !== undefined ? startpn : "";
            this.endpn = endpn !== undefined ? endpn : "";
            this.channel = channel !== undefined ? channel : "";
            this.transfer = transfer !== undefined ? transfer : "";
        },
        true,
        function(__os)
        {
            __os.writeString(this.startpn);
            __os.writeString(this.endpn);
            __os.writeString(this.channel);
            __os.writeString(this.transfer);
        },
        function(__is)
        {
            this.startpn = __is.readString();
            this.endpn = __is.readString();
            this.channel = __is.readString();
            this.transfer = __is.readString();
        },
        4, 
        false);

    comp.Staff = Slice.defineStruct(
        function(name, uid, phone, comp, compid, status, type, createdate)
        {
            this.name = name !== undefined ? name : "";
            this.uid = uid !== undefined ? uid : 0;
            this.phone = phone !== undefined ? phone : "";
            this.comp = comp !== undefined ? comp : "";
            this.compid = compid !== undefined ? compid : 0;
            this.status = status !== undefined ? status : 0;
            this.type = type !== undefined ? type : 0;
            this.createdate = createdate !== undefined ? createdate : "";
        },
        true,
        function(__os)
        {
            __os.writeString(this.name);
            __os.writeInt(this.uid);
            __os.writeString(this.phone);
            __os.writeString(this.comp);
            __os.writeInt(this.compid);
            __os.writeInt(this.status);
            __os.writeInt(this.type);
            __os.writeString(this.createdate);
        },
        function(__is)
        {
            this.name = __is.readString();
            this.uid = __is.readInt();
            this.phone = __is.readString();
            this.comp = __is.readString();
            this.compid = __is.readInt();
            this.status = __is.readInt();
            this.type = __is.readInt();
            this.createdate = __is.readString();
        },
        20, 
        false);
    Slice.defineSequence(comp, "staffSeqHelper", "comp.Staff", false);
    Slice.defineSequence(comp, "RouteSeqHelper", "comp.Route", false);

    /**
     * 企业与路线模型
     **/
    comp.CompInfo = Slice.defineStruct(
        function(compid, uoid, fname, sname, ctype, csale, contact, area, address, postcode, pho, pht, invtitle, invtype, taxno, phone, openbank, openaccount, billarea, billaddr, verify, creadit, routeList)
        {
            this.compid = compid !== undefined ? compid : "";
            this.uoid = uoid !== undefined ? uoid : "";
            this.fname = fname !== undefined ? fname : "";
            this.sname = sname !== undefined ? sname : "";
            this.ctype = ctype !== undefined ? ctype : 0;
            this.csale = csale !== undefined ? csale : 0;
            this.contact = contact !== undefined ? contact : 0;
            this.area = area !== undefined ? area : 0;
            this.address = address !== undefined ? address : "";
            this.postcode = postcode !== undefined ? postcode : "";
            this.pho = pho !== undefined ? pho : 0;
            this.pht = pht !== undefined ? pht : 0;
            this.invtitle = invtitle !== undefined ? invtitle : "";
            this.invtype = invtype !== undefined ? invtype : 0;
            this.taxno = taxno !== undefined ? taxno : "";
            this.phone = phone !== undefined ? phone : "";
            this.openbank = openbank !== undefined ? openbank : "";
            this.openaccount = openaccount !== undefined ? openaccount : 0;
            this.billarea = billarea !== undefined ? billarea : 0;
            this.billaddr = billaddr !== undefined ? billaddr : "";
            this.verify = verify !== undefined ? verify : 0;
            this.creadit = creadit !== undefined ? creadit : 0;
            this.routeList = routeList !== undefined ? routeList : null;
        },
        true,
        function(__os)
        {
            __os.writeString(this.compid);
            __os.writeString(this.uoid);
            __os.writeString(this.fname);
            __os.writeString(this.sname);
            __os.writeInt(this.ctype);
            __os.writeInt(this.csale);
            __os.writeLong(this.contact);
            __os.writeInt(this.area);
            __os.writeString(this.address);
            __os.writeString(this.postcode);
            __os.writeLong(this.pho);
            __os.writeLong(this.pht);
            __os.writeString(this.invtitle);
            __os.writeInt(this.invtype);
            __os.writeString(this.taxno);
            __os.writeString(this.phone);
            __os.writeString(this.openbank);
            __os.writeLong(this.openaccount);
            __os.writeInt(this.billarea);
            __os.writeString(this.billaddr);
            __os.writeInt(this.verify);
            __os.writeInt(this.creadit);
            comp.RouteSeqHelper.write(__os, this.routeList);
        },
        function(__is)
        {
            this.compid = __is.readString();
            this.uoid = __is.readString();
            this.fname = __is.readString();
            this.sname = __is.readString();
            this.ctype = __is.readInt();
            this.csale = __is.readInt();
            this.contact = __is.readLong();
            this.area = __is.readInt();
            this.address = __is.readString();
            this.postcode = __is.readString();
            this.pho = __is.readLong();
            this.pht = __is.readLong();
            this.invtitle = __is.readString();
            this.invtype = __is.readInt();
            this.taxno = __is.readString();
            this.phone = __is.readString();
            this.openbank = __is.readString();
            this.openaccount = __is.readLong();
            this.billarea = __is.readInt();
            this.billaddr = __is.readString();
            this.verify = __is.readInt();
            this.creadit = __is.readInt();
            this.routeList = comp.RouteSeqHelper.read(__is);
        },
        72, 
        false);

    /**
     * 企业logo的基本信息模型
     **/
    comp.BasicInfo = Slice.defineStruct(
        function(compid, fname, logoPath, verify, creadit)
        {
            this.compid = compid !== undefined ? compid : "";
            this.fname = fname !== undefined ? fname : "";
            this.logoPath = logoPath !== undefined ? logoPath : "";
            this.verify = verify !== undefined ? verify : 0;
            this.creadit = creadit !== undefined ? creadit : 0;
        },
        true,
        function(__os)
        {
            __os.writeString(this.compid);
            __os.writeString(this.fname);
            __os.writeString(this.logoPath);
            __os.writeInt(this.verify);
            __os.writeInt(this.creadit);
        },
        function(__is)
        {
            this.compid = __is.readString();
            this.fname = __is.readString();
            this.logoPath = __is.readString();
            this.verify = __is.readInt();
            this.creadit = __is.readInt();
        },
        11, 
        false);

    /**
     * 基础数据服务接口
     **/
    comp.CompService = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::comp::CompService"
        ],
        -1, undefined, undefined, false);

    comp.CompServicePrx = Slice.defineProxy(Ice.ObjectPrx, comp.CompService.ice_staticId, undefined);

    Slice.defineOperations(comp.CompService, comp.CompServicePrx,
    {
        "querygetCompByUid": [, , , , , [7], [[7]], , , , ],
        "querygetCompByCid": [, , , , , [7], [[7]], , , , ],
        "updateComp": [, , , , , [7], [[comp.CompInfo]], , , , ],
        "queryCompByBasicUid": [, , , , , [7], [[7]], , , , ],
        "insertCompUser": [, , , , , [7], [[3], [4]], , , , ],
        "selectCompUserByUid": [, , , , , [7], [[3]], , , , ],
        "addLoginCompByRedis": [, , , , , [7], [[3], [3]], , , , ],
        "selectStaffInfo": [, , , , , [7], [[7], [7], [7], [3], [3], [cstruct.Page]], [[cstruct.Page]], , , ],
        "addStaffInfo": [, , , , , [7], [[7], [7], [3], [3]], , , , ],
        "updateStaffInfo": [, , , , , [7], [[7], [7], [3], [3], [3]], , , , ],
        "updateStaffstatus": [, , , , , [7], [[3], [3], [3], [3]], , , , ],
        "updateCompPhone": [, , , , , [7], [[4], [4]], , , , ]
    });
    exports.comp = comp;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : this.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : this));
