// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `carriers.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var Slice = Ice.Slice;

    var carriers = __M.module("carriers");

    /**
     * 路线模型
     **/
    carriers.Route = Slice.defineStruct(
        function(origin, destination, channel, transfer)
        {
            this.origin = origin !== undefined ? origin : "";
            this.destination = destination !== undefined ? destination : "";
            this.channel = channel !== undefined ? channel : "";
            this.transfer = transfer !== undefined ? transfer : "";
        },
        true,
        function(__os)
        {
            __os.writeString(this.origin);
            __os.writeString(this.destination);
            __os.writeString(this.channel);
            __os.writeString(this.transfer);
        },
        function(__is)
        {
            this.origin = __is.readString();
            this.destination = __is.readString();
            this.channel = __is.readString();
            this.transfer = __is.readString();
        },
        4, 
        false);
    Slice.defineSequence(carriers, "RouteSeqHelper", "carriers.Route", false);

    /**
     * 承运商与路线模型
     **/
    carriers.CarrierInfo = Slice.defineStruct(
        function(cid, uno, fname, sname, ctype, csale, contact, area, address, postcode, pho, pht, invtitle, invtype, taxno, phone, openbank, openaccount, billarea, billaddr, busslic, idcard, trasportlic, insurcert, ntaxcert, ltaxcert, orgcert, logocarrier, verify, creadit, cstatus, routeList)
        {
            this.cid = cid !== undefined ? cid : 0;
            this.uno = uno !== undefined ? uno : "";
            this.fname = fname !== undefined ? fname : "";
            this.sname = sname !== undefined ? sname : "";
            this.ctype = ctype !== undefined ? ctype : 0;
            this.csale = csale !== undefined ? csale : 0;
            this.contact = contact !== undefined ? contact : "";
            this.area = area !== undefined ? area : 0;
            this.address = address !== undefined ? address : "";
            this.postcode = postcode !== undefined ? postcode : "";
            this.pho = pho !== undefined ? pho : "";
            this.pht = pht !== undefined ? pht : "";
            this.invtitle = invtitle !== undefined ? invtitle : "";
            this.invtype = invtype !== undefined ? invtype : 0;
            this.taxno = taxno !== undefined ? taxno : "";
            this.phone = phone !== undefined ? phone : "";
            this.openbank = openbank !== undefined ? openbank : "";
            this.openaccount = openaccount !== undefined ? openaccount : "";
            this.billarea = billarea !== undefined ? billarea : 0;
            this.billaddr = billaddr !== undefined ? billaddr : "";
            this.busslic = busslic !== undefined ? busslic : "";
            this.idcard = idcard !== undefined ? idcard : "";
            this.trasportlic = trasportlic !== undefined ? trasportlic : "";
            this.insurcert = insurcert !== undefined ? insurcert : "";
            this.ntaxcert = ntaxcert !== undefined ? ntaxcert : "";
            this.ltaxcert = ltaxcert !== undefined ? ltaxcert : "";
            this.orgcert = orgcert !== undefined ? orgcert : "";
            this.logocarrier = logocarrier !== undefined ? logocarrier : "";
            this.verify = verify !== undefined ? verify : 0;
            this.creadit = creadit !== undefined ? creadit : 0;
            this.cstatus = cstatus !== undefined ? cstatus : 0;
            this.routeList = routeList !== undefined ? routeList : null;
        },
        true,
        function(__os)
        {
            __os.writeLong(this.cid);
            __os.writeString(this.uno);
            __os.writeString(this.fname);
            __os.writeString(this.sname);
            __os.writeInt(this.ctype);
            __os.writeInt(this.csale);
            __os.writeString(this.contact);
            __os.writeInt(this.area);
            __os.writeString(this.address);
            __os.writeString(this.postcode);
            __os.writeString(this.pho);
            __os.writeString(this.pht);
            __os.writeString(this.invtitle);
            __os.writeInt(this.invtype);
            __os.writeString(this.taxno);
            __os.writeString(this.phone);
            __os.writeString(this.openbank);
            __os.writeString(this.openaccount);
            __os.writeInt(this.billarea);
            __os.writeString(this.billaddr);
            __os.writeString(this.busslic);
            __os.writeString(this.idcard);
            __os.writeString(this.trasportlic);
            __os.writeString(this.insurcert);
            __os.writeString(this.ntaxcert);
            __os.writeString(this.ltaxcert);
            __os.writeString(this.orgcert);
            __os.writeString(this.logocarrier);
            __os.writeInt(this.verify);
            __os.writeInt(this.creadit);
            __os.writeInt(this.cstatus);
            carriers.RouteSeqHelper.write(__os, this.routeList);
        },
        function(__is)
        {
            this.cid = __is.readLong();
            this.uno = __is.readString();
            this.fname = __is.readString();
            this.sname = __is.readString();
            this.ctype = __is.readInt();
            this.csale = __is.readInt();
            this.contact = __is.readString();
            this.area = __is.readInt();
            this.address = __is.readString();
            this.postcode = __is.readString();
            this.pho = __is.readString();
            this.pht = __is.readString();
            this.invtitle = __is.readString();
            this.invtype = __is.readInt();
            this.taxno = __is.readString();
            this.phone = __is.readString();
            this.openbank = __is.readString();
            this.openaccount = __is.readString();
            this.billarea = __is.readInt();
            this.billaddr = __is.readString();
            this.busslic = __is.readString();
            this.idcard = __is.readString();
            this.trasportlic = __is.readString();
            this.insurcert = __is.readString();
            this.ntaxcert = __is.readString();
            this.ltaxcert = __is.readString();
            this.orgcert = __is.readString();
            this.logocarrier = __is.readString();
            this.verify = __is.readInt();
            this.creadit = __is.readInt();
            this.cstatus = __is.readInt();
            this.routeList = carriers.RouteSeqHelper.read(__is);
        },
        63, 
        false);

    /**
     * 基础数据服务接口
     **/
    carriers.CarrierService = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::carriers::CarrierService"
        ],
        -1, undefined, undefined, false);

    carriers.CarrierServicePrx = Slice.defineProxy(Ice.ObjectPrx, carriers.CarrierService.ice_staticId, undefined);

    Slice.defineOperations(carriers.CarrierService, carriers.CarrierServicePrx,
    {
        "querygetCarrierByToken": [, , , , , [carriers.CarrierInfo], [[7]], , , , ],
        "querygetCarrierByUid": [, , , , , [carriers.CarrierInfo], [[7]], , , , ],
        "updateCarrier": [, , , , , [3], [[carriers.CarrierInfo]], , , , ],
        "updateLogocarrier": [, , , , , [3], [[7], [7]], , , , ]
    });
    exports.carriers = carriers;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : this.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : this));
